C51 COMPILER V9.56.0.0   TASK                                                              08/10/2020 22:04:48 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TASK
OBJECT MODULE PLACED IN .\Objects\task.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE APP\task.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\STC_LIB;.\APP) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\task.lst) TABS(2) OBJECT(.\Objects\task.obj)

line level    source

   1          #include "wifi.h"
   2          #include "http_text.h"
   3          #include "string.h"
   4          #include "debug.h"
   5          #include "devices.h"
   6          
   7          #define SERVER_IP   "119.3.233.56"
   8          #define SERVER_PORT   "5000"
   9          
  10          /***************************************************************************
  11          eap8266作为服务端，接收消息格式:
  12          +IPD,id,length:data, id 为连接的客户端id，length为接收到的字符串长度,data为数据
  13          eap8266作为服务端，接收消息格式:
  14          +IPD,length:length为接收到的字符串长度,data为数据
  15          ***************************************************************************/
  16          #define SERVER_MSG_KEYWORD  "+IPD,"
  17          #define CLIENT_MSG_KEYWORD  "+IPD,"
  18          //服务端判断请求首页关键字
  19          #define HTTP_SERVER_INDEX_KEYWORD   "GET / "    
  20          //服务端判断请求控制页关键字
  21          #define HTTP_SERVER_CONTROL_KEYWORD   "GET /?"  
  22          //服务端判断请求控制页关键字
  23          #define HTTP_SERVER_CONFIG_KEYWORD    "GET /config"   
  24          //服务端判断请求控制页关键字
  25          #define HTTP_SERVER_RES_KEYWORD   "GET /res"  
  26          
  27          
  28          //客户端判断收到控制信息关键字
  29          #define HTTP_CLIENT_CONTROL_KEYWORD   "control?" 
  30          
  31          
  32          
  33          void task_Server(void)
  34          {
  35   1        u8 *p, *temp;
  36   1        u8 client_id[2];
  37   1        temp = strstr(WIFI_RBUF, "HTTP"); //  判断是否为http 请求
  38   1        if(!temp)
  39   1          return;
  40   1        //浏览器发送的请求信息会很多，为方便处理
  41   1        //截取第一行到HTTP之前的请求有效信息
  42   1        *temp = 0x00;
  43   1        p = strstr(WIFI_RBUF, SERVER_MSG_KEYWORD);    //获取链接的client_id
  44   1        if(!p)
  45   1          return;
  46   1        p = p + sizeof(SERVER_MSG_KEYWORD)-1;
  47   1        client_id[0] = *p;      //
  48   1        client_id[1] = '\0';
  49   1        p = strstr(WIFI_RBUF,  HTTP_SERVER_INDEX_KEYWORD);    //请求首页?
  50   1        if(p)
  51   1        {
  52   2          WIFI_Server_HTTP_Response(client_id, HTTP_Server_Index);  //发送首页
  53   2        }
  54   1        else if(p = strstr(WIFI_RBUF, HTTP_SERVER_CONTROL_KEYWORD)) //请求控制?
C51 COMPILER V9.56.0.0   TASK                                                              08/10/2020 22:04:48 PAGE 2   

  55   1        {
  56   2          if(DevicesControl(p) == 1)    //控制外设
  57   2            WIFI_Server_HTTP_Response(client_id, HTTP_Server_Index);  //成功返回控制页面
  58   2          else
  59   2            WIFI_Server_HTTP_Response(client_id, "Devices control Fail !!!");   //师范返回信息
  60   2        }
  61   1        else if(p = strstr(WIFI_RBUF, HTTP_SERVER_CONFIG_KEYWORD))  //请求配置页面
  62   1        {
  63   2          WIFI_Server_HTTP_Response(client_id, HTTP_Server_Config); //发送
  64   2        }
  65   1        else if(p = strstr(WIFI_RBUF, HTTP_SERVER_RES_KEYWORD)) //请求配置结果页面
  66   1        {
  67   2          WIFI_Server_HTTP_Response(client_id, HTTP_Server_Res);  //发送
  68   2        }
  69   1      }
  70          
  71          void task_Client(void)
  72          {
  73   1        u8 device_para[100];
  74   1        u8 *p;
  75   1        if(!WIFI_ClientConnectServer(SERVER_IP, SERVER_PORT))
  76   1          return;
  77   1        SERVER_LIGHT_ON();
  78   1        device_para[0] = 0;
  79   1        DeviceGetStatus(device_para); //获取设备信息字符串
  80   1         //向服务器发送设备状态http 请求
  81   1        if(!WIFI_Client_HTTP_Request(HTTP_Client_Request_Head1, device_para, HTTP_Client_Request_Head3))
  82   1          return;
  83   1        if(WIFI_Receive(1000))    //等待服务器响应
  84   1        {
  85   2          SERVER_LIGHT_OFF();
  86   2          p = strstr(WIFI_RBUF, HTTP_CLIENT_CONTROL_KEYWORD); //收到有效控制信息?
  87   2          if(p)
  88   2          {
  89   3            DevicesControl(p);
  90   3          }
  91   2        }
  92   1        else
  93   1        {
  94   2          debug("Server response timeout!\r\n");
  95   2          
  96   2        }
  97   1        SERVER_LIGHT_OFF();
  98   1      }
  99          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    511    ----
   CONSTANT SIZE    =    125    ----
   XDATA SIZE       =   ----     105
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
