C51 COMPILER V9.56.0.0   SYS                                                               11/27/2020 11:41:43 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Objects\sys.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.EXE APP\sys.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\STC_
                    -LIB;.\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\sys.lst) TABS(2) OBJECT(.\Objects\sys.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      sys_tick.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-22
   6            * @brief: 系统时间片模块，为整个系统提供时间片，
   7            本项目使用22.1184Mhz外部晶振，定时器t0每隔10ms产生一次中断，
   8            中断函数会对每个任务时间片计数器-1，从而驱动任务调度
   9            每秒经历100个时间片，这些时间片都可以供任务进行调度
  10            另外还提供了一个时间任务供调用
  11          *******************************************************************************/
  12          #include "config.h"
  13          #include "debug.h"
  14          #include "usart.h"
  15          #include "sys.h"
  16          #include "eeprom.h"
  17          
  18          #define DOG_FLAG_MASK     0x80
  19          #define DOG_ENABLE_MASK   0x20
  20          #define DOG_CLEAR_MASK    0x10
  21          #define DOG_IDLECOUNT_MASK 0x08
  22          #define DOG_PRESCALER_MASK      0xf8
  23          #define DOG_PRESCALER     7
  24          
  25          
  26          u8 sys_tick;                    //时间片计数器
  27          u8 second,minute,hour;          //时钟任务变量
  28          u16 tick_counter;
  29          
  30          void debug_time(void)
  31          {
  32   1        debug_var((u16)hour);
  33   1        debug(":");
  34   1        debug_var((u16)minute);
  35   1        debug(":");
  36   1        debug_var((u16)second);
  37   1        debug("\r\n");
  38   1      
  39   1      }
  40          
  41          
  42          /****************************************************************************************
  43            * @brief: 初始化时间片定时器t0，初始化时钟任务变量 
  44            * @param: none
  45            * @retval:  none
  46          *****************************************************************************************/
  47          void sys_tick_init(void)    //10毫秒@22.1184MHz
  48          {
  49   1        AUXR &= 0x7F;   //定时器时钟12T模式
  50   1        TMOD &= 0xF0;   //设置定时器模式
  51   1        TL0 = 0x00;   //设置定时初值
  52   1        TH0 = 0xB8;   //设置定时初值
  53   1        TF0 = 0;    //清除TF0标志
  54   1        TR0 = 1;    //定时器0开始计时
C51 COMPILER V9.56.0.0   SYS                                                               11/27/2020 11:41:43 PAGE 2   

  55   1      
  56   1        ET0=1;
  57   1      
  58   1        sys_tick=TICK_PER_SECOND;
  59   1        second=0;
  60   1        minute=0;
  61   1        hour=0;
  62   1      
  63   1        tick_counter = 0;
  64   1      }
  65          
  66          /****************************************************************************************
  67            * @brief: 时间片定时器中断服务程序，每个任务计数器-1
  68                  对每个任务计时器-1
  69                  对串口的接收超时时间-1
  70            * @param: none
  71            * @retval:  none
  72          *****************************************************************************************/
  73          void sys_tick_int(void) interrupt TIMER0_VECTOR using 1
  74          {
  75   1        EA=0;
  76   1        tick_counter++;
  77   1        if(sys_tick>0)
  78   1        {
  79   2          sys_tick--;
  80   2        }
  81   1        else
  82   1        {
  83   2          sys_tick = TICK_PER_SECOND;
  84   2          second++;
  85   2          if(second>=60)
  86   2          {
  87   3            second=0;
  88   3            minute++;
  89   3            if(minute>=60)
  90   3            {
  91   4              minute=0;
  92   4              hour++;
  93   4            }
  94   3          }
  95   2        } 
  96   1        if(COM2.B_RX_EN)      //如果允许串口接收
  97   1        {
  98   2          if(COM2.RX_TimeOut>0)     //计时器大于0
  99   2          {
 100   3            COM2.RX_TimeOut--;    //计时器-1
 101   3            if(0==COM2.RX_TimeOut)  //如果计时器倒计时完毕
 102   3            {
 103   4              COM2.B_RX_EN=0; //禁止接收
 104   4              if(COM2.RX_Cnt>0) //如果收到数据
 105   4              {
 106   5                RX2_Buffer[COM2.RX_Cnt]='\0'; //添加0
 107   5                COM2.B_RX_OK=1;       //设置块接收完毕标志
 108   5              }
 109   4            }
 110   3          }
 111   2        }
 112   1        EA=1;
 113   1      }
 114          
 115          void sys_sleep(void)
 116          {
C51 COMPILER V9.56.0.0   SYS                                                               11/27/2020 11:41:43 PAGE 3   

 117   1        PCON |= 0x01;
 118   1        _nop_();
 119   1        _nop_();
 120   1        _nop_();
 121   1        _nop_();
 122   1      }
 123          
 124          void sys_reset(void)
 125          {
 126   1        IAP_CONTR |= 0x20;
 127   1      }
 128          
 129          void sys_clear(void)
 130          {
 131   1        EEPROM_SectorErase(EEPROM_FIRST_ADDRESS);
 132   1        EEPROM_SectorErase(EEPROM_SECOND_ADDRESS);
 133   1        debug("erase paras has done\r\n");
 134   1        delay_s(2);
 135   1      }
 136          
 137          
 138          //看门狗配置
 139          //使能，清看门狗，空闲计数
 140          void dog_init(void)
 141          {
 142   1        WDT_CONTR =0x00;
 143   1        WDT_CONTR = DOG_ENABLE_MASK | DOG_CLEAR_MASK | DOG_IDLECOUNT_MASK;
 144   1        WDT_CONTR |= DOG_PRESCALER;
 145   1        
 146   1      }
 147          //清看门狗
 148          void dog_clear(void)
 149          {
 150   1        WDT_CONTR |= DOG_CLEAR_MASK;
 151   1      }
 152          
 153          /****************************************************************************************
 154            * @brief: 时钟任务，每隔1s打印时间
 155            * @param: none
 156            * @retval:  none
 157          *****************************************************************************************/
 158          /*void task0_Clock(void)
 159          {
 160            if(sys_tick == 0)
 161            {
 162              sys_tick=TICK_PER_SECOND;
 163              second++;
 164              if(second>=60)
 165              {
 166                second=0;
 167                minute++;
 168                if(minute>=60)
 169                {
 170                  minute=0;
 171                  hour++;
 172                }
 173              }
 174              debug("时间：");
 175              debug_var((u16)hour);
 176              debug(":");
 177              debug_var((u16)minute);
 178              debug(":");
C51 COMPILER V9.56.0.0   SYS                                                               11/27/2020 11:41:43 PAGE 4   

 179              debug_var((u16)second);
 180              debug("\r\n");
 181            }
 182          }
 183          //进入空闲
 184          void sys_idle(void)
 185          {
 186            PCON = 0x01;
 187          }
 188          //进入睡眠
 189          void sys_sleep(void)
 190          {
 191            PCON = 0x02;
 192          }
 193          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
