C51 COMPILER V9.56.0.0   SYS                                                               11/12/2020 16:31:13 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Objects\sys.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.EXE APP\sys.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\STC_
                    -LIB;.\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\sys.lst) TABS(2) OBJECT(.\Objects\sys.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      sys_tick.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-22
   6            * @brief: 系统时间片模块，为整个系统提供时间片，
   7            本项目使用22.1184Mhz外部晶振，定时器t0每隔10ms产生一次中断，
   8            中断函数会对每个任务时间片计数器-1，从而驱动任务调度
   9            每秒经历100个时间片，这些时间片都可以供任务进行调度
  10            另外还提供了一个时间任务供调用
  11          *******************************************************************************/
  12          #include "config.h"
  13          #include "debug.h"
  14          #include "usart.h"
  15          #include "sys.h"
  16          
  17          u8 sys_tick;                    //时间片计数器
  18          u8 second,minute,hour;          //时钟任务变量
  19          u16 tick_counter;
  20          
  21          extern u8 second,minute,hour;         
  22          
  23          void debug_time(void)
  24          {
  25   1        debug_var((u16)hour);
  26   1        debug(":");
  27   1        debug_var((u16)minute);
  28   1        debug(":");
  29   1        debug_var((u16)second);
  30   1        debug("\r\n");
  31   1      
  32   1      }
  33          
  34          
  35          /****************************************************************************************
  36            * @brief: 初始化时间片定时器t0，初始化时钟任务变量 
  37            * @param: none
  38            * @retval:  none
  39          *****************************************************************************************/
  40          void sys_tick_init(void)    //10毫秒@22.1184MHz
  41          {
  42   1        AUXR &= 0x7F;   //定时器时钟12T模式
  43   1        TMOD &= 0xF0;   //设置定时器模式
  44   1        TL0 = 0x00;   //设置定时初值
  45   1        TH0 = 0xB8;   //设置定时初值
  46   1        TF0 = 0;    //清除TF0标志
  47   1        TR0 = 1;    //定时器0开始计时
  48   1      
  49   1        ET0=1;
  50   1      
  51   1        sys_tick=TICK_PER_SECOND;
  52   1        second=0;
  53   1        minute=0;
  54   1        hour=0;
C51 COMPILER V9.56.0.0   SYS                                                               11/12/2020 16:31:13 PAGE 2   

  55   1      
  56   1        tick_counter = 0;
  57   1      }
  58          
  59          /****************************************************************************************
  60            * @brief: 时间片定时器中断服务程序，每个任务计数器-1
  61                  对每个任务计时器-1
  62                  对串口的接收超时时间-1
  63            * @param: none
  64            * @retval:  none
  65          *****************************************************************************************/
  66          void sys_tick_int(void) interrupt TIMER0_VECTOR using 1
  67          {
  68   1        EA=0;
  69   1        tick_counter++;
  70   1        if(sys_tick>0)
  71   1        {
  72   2          sys_tick--;
  73   2        }
  74   1        else
  75   1        {
  76   2          sys_tick = TICK_PER_SECOND;
  77   2          second++;
  78   2          if(second>=60)
  79   2          {
  80   3            second=0;
  81   3            minute++;
  82   3            if(minute>=60)
  83   3            {
  84   4              minute=0;
  85   4              hour++;
  86   4            }
  87   3          }
  88   2        } 
  89   1        if(COM2.B_RX_EN)      //如果允许串口接收
  90   1        {
  91   2          if(COM2.RX_TimeOut>0)     //计时器大于0
  92   2          {
  93   3            COM2.RX_TimeOut--;    //计时器-1
  94   3            if(0==COM2.RX_TimeOut)  //如果计时器倒计时完毕
  95   3            {
  96   4              COM2.B_RX_EN=0; //禁止接收
  97   4              if(COM2.RX_Cnt>0) //如果收到数据
  98   4              {
  99   5                RX2_Buffer[COM2.RX_Cnt]='\0'; //添加0
 100   5                COM2.B_RX_OK=1;       //设置块接收完毕标志
 101   5              }
 102   4            }
 103   3          }
 104   2        }
 105   1        EA=1;
 106   1      }
 107          /****************************************************************************************
 108            * @brief: 时钟任务，每隔1s打印时间
 109            * @param: none
 110            * @retval:  none
 111          *****************************************************************************************/
 112          /*void task0_Clock(void)
 113          {
 114            if(sys_tick == 0)
 115            {
 116              sys_tick=TICK_PER_SECOND;
C51 COMPILER V9.56.0.0   SYS                                                               11/12/2020 16:31:13 PAGE 3   

 117              second++;
 118              if(second>=60)
 119              {
 120                second=0;
 121                minute++;
 122                if(minute>=60)
 123                {
 124                  minute=0;
 125                  hour++;
 126                }
 127              }
 128              debug("时间：");
 129              debug_var((u16)hour);
 130              debug(":");
 131              debug_var((u16)minute);
 132              debug(":");
 133              debug_var((u16)second);
 134              debug("\r\n");
 135            }
 136          }
 137          //进入空闲
 138          void sys_idle(void)
 139          {
 140            PCON = 0x01;
 141          }
 142          //进入睡眠
 143          void sys_sleep(void)
 144          {
 145            PCON = 0x02;
 146          }
 147          
 148          #define DOG_FLAG_MASK     0x80
 149          #define DOG_ENABLE_MASK   0x20
 150          #define DOG_CLEAR_MASK    0x10
 151          #define DOG_IDLECOUNT_MASK 0x08
 152          #define DOG_PRESCALER_MASK      0xf8
 153          #define DOG_PRESCALER     6
 154          
 155          //看门狗配置
 156          //使能，清看门狗，空闲计数
 157          void dog_init(void)
 158          {
 159            WDT_CONTR =0x00;
 160            WDT_CONTR = DOG_ENABLE_MASK | DOG_CLEAR_MASK | DOG_IDLECOUNT_MASK;
 161            WDT_CONTR |= DOG_PRESCALER;
 162            
 163          }
 164          //清看门狗
 165          void dog_clear(void)
 166          {
 167            WDT_CONTR |= DOG_CLEAR_MASK;
 168          }
 169          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   SYS                                                               11/12/2020 16:31:13 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
