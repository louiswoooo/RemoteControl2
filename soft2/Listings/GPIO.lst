C51 COMPILER V9.56.0.0   GPIO                                                              07/17/2020 16:00:18 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\GPIO.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.EXE STC_LIB\GPIO.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.
                    -\STC_LIB;.\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\GPIO.lst) TABS(2) OBJECT(.\Objects\GPIO.obj)

line level    source

   1          
   2          /*************  功能说明  **************
   3          
   4          本文件为STC15xxx系列的端口初始化程序,用户几乎可以不修改这个程序.
   5          
   6          
   7          ******************************************/
   8          
   9          #include  "GPIO.h"
  10          
  11          
  12          //========================================================================
  13          // 函数: u8 GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  14          // 描述: 初始化IO口.
  15          // 参数: GPIOx: 结构参数,请参考timer.h里的定义.
  16          // 返回: 成功返回0, 空操作返回1,错误返回2.
  17          // 版本: V1.0, 2012-10-22
  18          //========================================================================
  19          u8  GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  20          {
  21   1        if(GPIO > GPIO_P5)        return 1; //空操作
  22   1        if(GPIOx->Mode > GPIO_OUT_PP) return 2; //错误
  23   1        if(GPIO == GPIO_P0)
  24   1        {
  25   2          if(GPIOx->Mode == GPIO_PullUp)    P0M1 &= ~GPIOx->Pin,  P0M0 &= ~GPIOx->Pin;   //上拉准双向口
  26   2          if(GPIOx->Mode == GPIO_HighZ)   P0M1 |=  GPIOx->Pin,  P0M0 &= ~GPIOx->Pin;   //浮空输入
  27   2          if(GPIOx->Mode == GPIO_OUT_OD)    P0M1 |=  GPIOx->Pin,  P0M0 |=  GPIOx->Pin;   //开漏输出
  28   2          if(GPIOx->Mode == GPIO_OUT_PP)    P0M1 &= ~GPIOx->Pin,  P0M0 |=  GPIOx->Pin;   //推挽输出
  29   2        }
  30   1        if(GPIO == GPIO_P1)
  31   1        {
  32   2          if(GPIOx->Mode == GPIO_PullUp)    P1M1 &= ~GPIOx->Pin,  P1M0 &= ~GPIOx->Pin;   //上拉准双向口
  33   2          if(GPIOx->Mode == GPIO_HighZ)   P1M1 |=  GPIOx->Pin,  P1M0 &= ~GPIOx->Pin;   //浮空输入
  34   2          if(GPIOx->Mode == GPIO_OUT_OD)    P1M1 |=  GPIOx->Pin,  P1M0 |=  GPIOx->Pin;   //开漏输出
  35   2          if(GPIOx->Mode == GPIO_OUT_PP)    P1M1 &= ~GPIOx->Pin,  P1M0 |=  GPIOx->Pin;   //推挽输出
  36   2        }
  37   1        if(GPIO == GPIO_P2)
  38   1        {
  39   2          if(GPIOx->Mode == GPIO_PullUp)    P2M1 &= ~GPIOx->Pin,  P2M0 &= ~GPIOx->Pin;   //上拉准双向口
  40   2          if(GPIOx->Mode == GPIO_HighZ)   P2M1 |=  GPIOx->Pin,  P2M0 &= ~GPIOx->Pin;   //浮空输入
  41   2          if(GPIOx->Mode == GPIO_OUT_OD)    P2M1 |=  GPIOx->Pin,  P2M0 |=  GPIOx->Pin;   //开漏输出
  42   2          if(GPIOx->Mode == GPIO_OUT_PP)    P2M1 &= ~GPIOx->Pin,  P2M0 |=  GPIOx->Pin;   //推挽输出
  43   2        }
  44   1        if(GPIO == GPIO_P3)
  45   1        {
  46   2          if(GPIOx->Mode == GPIO_PullUp)    P3M1 &= ~GPIOx->Pin,  P3M0 &= ~GPIOx->Pin;   //上拉准双向口
  47   2          if(GPIOx->Mode == GPIO_HighZ)   P3M1 |=  GPIOx->Pin,  P3M0 &= ~GPIOx->Pin;   //浮空输入
  48   2          if(GPIOx->Mode == GPIO_OUT_OD)    P3M1 |=  GPIOx->Pin,  P3M0 |=  GPIOx->Pin;   //开漏输出
  49   2          if(GPIOx->Mode == GPIO_OUT_PP)    P3M1 &= ~GPIOx->Pin,  P3M0 |=  GPIOx->Pin;   //推挽输出
  50   2        }
  51   1        if(GPIO == GPIO_P4)
  52   1        {
  53   2          if(GPIOx->Mode == GPIO_PullUp)    P4M1 &= ~GPIOx->Pin,  P4M0 &= ~GPIOx->Pin;   //上拉准双向口
  54   2          if(GPIOx->Mode == GPIO_HighZ)   P4M1 |=  GPIOx->Pin,  P4M0 &= ~GPIOx->Pin;   //浮空输入
C51 COMPILER V9.56.0.0   GPIO                                                              07/17/2020 16:00:18 PAGE 2   

  55   2          if(GPIOx->Mode == GPIO_OUT_OD)    P4M1 |=  GPIOx->Pin,  P4M0 |=  GPIOx->Pin;   //开漏输出
  56   2          if(GPIOx->Mode == GPIO_OUT_PP)    P4M1 &= ~GPIOx->Pin,  P4M0 |=  GPIOx->Pin;   //推挽输出
  57   2        }
  58   1        if(GPIO == GPIO_P5)
  59   1        {
  60   2          if(GPIOx->Mode == GPIO_PullUp)    P5M1 &= ~GPIOx->Pin,  P5M0 &= ~GPIOx->Pin;   //上拉准双向口
  61   2          if(GPIOx->Mode == GPIO_HighZ)   P5M1 |=  GPIOx->Pin,  P5M0 &= ~GPIOx->Pin;   //浮空输入
  62   2          if(GPIOx->Mode == GPIO_OUT_OD)    P5M1 |=  GPIOx->Pin,  P5M0 |=  GPIOx->Pin;   //开漏输出
  63   2          if(GPIOx->Mode == GPIO_OUT_PP)    P5M1 &= ~GPIOx->Pin,  P5M0 |=  GPIOx->Pin;   //推挽输出
  64   2        }
  65   1        return 0; //成功
  66   1      }
  67          
  68          u8 GPIO_SetBit(u8 GPIO, u8 PIN)
  69          {
  70   1        if(GPIO > GPIO_P5)        return 1; //空操作
  71   1        if(GPIO == GPIO_P0)
  72   1        {
  73   2          P0 |= PIN;
  74   2        }
  75   1        if(GPIO == GPIO_P1)
  76   1        {
  77   2          P1 |= PIN;
  78   2      
  79   2        }
  80   1        if(GPIO == GPIO_P2)
  81   1        {
  82   2          P2 |= PIN;
  83   2        }
  84   1        if(GPIO == GPIO_P3)
  85   1        {
  86   2          P3 |= PIN;
  87   2        }
  88   1        if(GPIO == GPIO_P4)
  89   1        {
  90   2          P4 |= PIN;
  91   2        }
  92   1        if(GPIO == GPIO_P5)
  93   1        {
  94   2          P5 |= PIN;
  95   2        }
  96   1        return 0; //成功
  97   1      }
  98          
  99          u8 GPIO_ClearBit(u8 GPIO, u8 PIN)
 100          {
 101   1        if(GPIO > GPIO_P5)        return 1; //空操作
 102   1        if(GPIO == GPIO_P0)
 103   1        {
 104   2          P0 &= ~PIN;
 105   2        }
 106   1        if(GPIO == GPIO_P1)
 107   1        {
 108   2          P1 &= ~PIN;
 109   2      
 110   2        }
 111   1        if(GPIO == GPIO_P2)
 112   1        {
 113   2          P2 &= ~PIN;
 114   2        }
 115   1        if(GPIO == GPIO_P3)
 116   1        {
C51 COMPILER V9.56.0.0   GPIO                                                              07/17/2020 16:00:18 PAGE 3   

 117   2          P3 &= ~PIN;
 118   2        }
 119   1        if(GPIO == GPIO_P4)
 120   1        {
 121   2          P4 &= ~PIN;
 122   2        }
 123   1        if(GPIO == GPIO_P5)
 124   1        {
 125   2          P5 &= ~PIN;
 126   2        }
 127   1        return 0; //成功
 128   1      }
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    564    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
