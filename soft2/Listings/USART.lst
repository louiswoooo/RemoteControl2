C51 COMPILER V9.56.0.0   USART                                                             06/30/2020 22:17:27 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\USART.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.EXE STC_LIB\USART.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\STC_LIB;.\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\USART.lst) TABS(2) OBJECT(.\Objects\USART.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      usart.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-22
   6            * @brief: ´®¿Ú2µÄÇý¶¯³ÌÐò£¬´®¿Ú2ÉèÖÃÎªwifiÄ£¿éµÄ¿ØÖÆ¶Ë¿Ú£¬´®¿Ú²ÉÓÃ¿é½ÓÊÕµÄ½ÓÊÕ»úÖÆÎª:
   7                  Ê¹ÄÜ´®¿Ú½ÓÊÕ£¬´Ó½ÓÊÕµ½µÚÒ»¸ö´®¿Ú×Ö·û¿ªÊ¼µ¹¼ÆÊ±£¬Èç¹ûÊÕµ½ÐÂ×Ö·ûÔòÖØÐÂ¿ªÊ¼µ¹¼ÆÊ±£¬
   8                  Èç¹û¼ÆÊ±³¬Ê±£¬ÔòÅÐ¶Ï½ÓÊÕµ½ÁËÊý¾Ý¿é£¬ÓÉÓÚÈ«²¿²ÉÓÃ×Ö·û´®ÃüÁîµÄÍ¨Ñ¶·½Ê½£¬
   9                  ×îºóÔÚ½ÓÊÕµ½µÄ×Ö·û´®ºóÃæ¼Ó0£¬´Ëºó½ûÖ¹½ÓÊÕ£¬µÈ´ýÈÎÎñ´¦Àí¸ÃÃüÁîÍê±Ïºó£¬ÈÎÎñ¿ÉÒÔ
  10                  ÖØÐÂÆô¶¯½ÓÊÕ
  11                  ´®¿Ú4µÄÇý¶¯³ÌÐò£¬³ö¿Ú4µÄ·¢ËÍ³ÌÐò²ÉÓÃÁË»º³åÇøÖÐ¶Ï·¢ËÍµÄ·½Ê½£¬·¢ËÍ³ÌÐòÏÈ°ÑÊý¾ÝËÍµ½»º³åÇø£¬
  12                  È»ºóÆô¶¯´¥·¢ÖÐ¶Ï°´ÕÕ·¢ËÍ¶ÁÖ¸Õë½øÐÐ·¢ËÍ£¬Èç¹û¶ÁÖ¸ÕëµÈÓÚÐ´Ö¸Õë£¬Ôò»º³åÇøÊý¾Ý·¢ËÍ½áÊø
  13          *******************************************************************************/
  14          #include "USART.h"
  15          
  16          COMx_Define COM2,COM4;
  17          u8  xdata TX2_Buffer[COM_TX2_Lenth];  //·¢ËÍ»º³å
  18          u8  xdata RX2_Buffer[COM_RX2_Lenth];  //½ÓÊÕ»º³å
  19          u8  xdata TX4_Buffer[COM_TX4_Lenth];  //·¢ËÍ»º³å
  20          u8  xdata RX4_Buffer[COM_RX4_Lenth];  //½ÓÊÕ»º³å
  21          
  22          /****************************************************************************************
  23            * @brief: ´®¿Ú2×Ö·û·¢ËÍ³ÌÐò£¬ÏÈ°Ñ×Ö·û´æÈë»º³åÇø£¬
  24                  È»ºóÅÐ¶ÏÊÇ·ñ´®¿ÚÕýÔÚ·¢ËÍ£¬Èç¹ûÃ»ÓÐ£¬Ôò´¥·¢´®¿Ú·¢ËÍ
  25            * @param: dat
  26            * @retval:  none
  27          *****************************************************************************************/
  28          void TX2_write2buff(u8 dat) //Ð´Èë·¢ËÍ»º³å£¬Ö¸Õë+1
  29          {
  30   1        TX2_Buffer[COM2.TX_write] = dat;  //×°·¢ËÍ»º³å
  31   1        if(++COM2.TX_write >= COM_TX2_Lenth)  COM2.TX_write = 0;
  32   1      
  33   1        if(COM2.B_TX_busy == 0)   //¿ÕÏÐ
  34   1        {  
  35   2          COM2.B_TX_busy = 1;   //±êÖ¾Ã¦
  36   2          SET_TI2();        //´¥·¢·¢ËÍÖÐ¶Ï
  37   2        }
  38   1      }
  39          /****************************************************************************************
  40            * @brief: ´®¿Ú2×Ö·û´®·¢ËÍ³ÌÐò£¬Óöµ½0½áÊø
  41            * @param: puts
  42            * @retval:  none
  43          *****************************************************************************************/
  44          void Usart2SendString(u8 *puts)
  45          {
  46   1          for (; *puts != 0;  puts++)  TX2_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
  47   1      }
  48          void TX4_write2buff(u8 dat) //Ð´Èë·¢ËÍ»º³å£¬Ö¸Õë+1
  49          {
  50   1        TX4_Buffer[COM4.TX_write] = dat;  //×°·¢ËÍ»º³å
  51   1        if(++COM4.TX_write >= COM_TX4_Lenth)  COM4.TX_write = 0;
  52   1      
  53   1        if(COM4.B_TX_busy == 0)   //¿ÕÏÐ
  54   1        {  
C51 COMPILER V9.56.0.0   USART                                                             06/30/2020 22:17:27 PAGE 2   

  55   2          COM4.B_TX_busy = 1;   //±êÖ¾Ã¦
  56   2          SET_TI4();        //´¥·¢·¢ËÍÖÐ¶Ï
  57   2        }
  58   1      }
  59          
  60          
  61          void Usart4SendString(u8 *puts)
  62          {
  63   1          for (; *puts != 0;  puts++)  TX4_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
  64   1      }
  65          
  66          //´®¿Ú2³õÊ¼»¯
  67          void Usart2Init(void)   //115200bps@22.1184MHz
  68          {
  69   1        S2CON = 0x50;   //8Î»Êý¾Ý,¿É±ä²¨ÌØÂÊ
  70   1        AUXR |= 0x04;   //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T
  71   1        T2L = 0xD0;   //Éè¶¨¶¨Ê±³õÖµ
  72   1        T2H = 0xFF;   //Éè¶¨¶¨Ê±³õÖµ
  73   1        AUXR |= 0x10;   //Æô¶¯¶¨Ê±Æ÷2
  74   1        
  75   1        COM2.id = 2;
  76   1        COM2.TX_read    = 0;
  77   1        COM2.TX_write   = 0;
  78   1        COM2.B_TX_busy  = 0;
  79   1        COM2.RX_Cnt     = 0;
  80   1        COM2.RX_TimeOut = 0;
  81   1        COM2.B_RX_EN    = 0;
  82   1        COM2.B_RX_OK    = 0;
  83   1      }
  84          //´®¿Ú4³õÊ¼»¯
  85          void Usart4Init(void)   //115200bps@22.1184MHz
  86          {
  87   1        S4CON = 0x10;   //8???,?????
  88   1        S4CON |= 0x40;    //??4?????4???????
  89   1        T4T3M |= 0x20;    //???4???Fosc,?1T
  90   1        T4L = 0xD0;   //??????
  91   1        T4H = 0xFF;   //??????
  92   1        T4T3M |= 0x80;    //?????4
  93   1      
  94   1        COM4.id = 4;
  95   1        COM4.TX_read    = 0;
  96   1        COM4.TX_write   = 0;
  97   1        COM4.B_TX_busy  = 0;
  98   1        COM4.RX_Cnt     = 0;
  99   1        COM4.RX_TimeOut = 0;
 100   1        COM4.B_RX_EN    = 0;
 101   1        COM4.B_RX_OK    = 0;
 102   1      
 103   1      }
 104          
 105          /****************************************************************************************
 106            * @brief: ´®¿Ú2ÖÐ¶Ï³ÌÐò£¬¸ù¾Ý½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 107                  ²¢ÇÒÖØÐÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
 108                  ·¢ËÍÖÐ¶Ï¸ù¾Ý¶ÁÐ´Ö¸ÕëÅÐ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
 109            * @param: none
 110            * @retval:  none
 111          *****************************************************************************************/
 112          void UART2_int (void) interrupt UART2_VECTOR
 113          {
 114   1        if(RI2)
 115   1        {
 116   2          CLR_RI2();
C51 COMPILER V9.56.0.0   USART                                                             06/30/2020 22:17:27 PAGE 3   

 117   2          if(COM2.B_RX_EN == 1)   //Èç¹ûÔÊÐí½ÓÊÕ
 118   2          {
 119   3            if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;  //»º³åÇøÒç³öå£¿
 120   3            RX2_Buffer[COM2.RX_Cnt++] = S2BUF;          //ÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 121   3            COM2.RX_TimeOut = TimeOutSet2;            //ÖØÐÂÉèÖÃ³¬Ê±¼ÆÊ±Æ÷
 122   3          }
 123   2        }
 124   1        if(TI2)
 125   1        {
 126   2          CLR_TI2();
 127   2          if(COM2.TX_read != COM2.TX_write)   //Ã»ÓÐÍê³É·¢ËÍ
 128   2          {
 129   3            S2BUF = TX2_Buffer[COM2.TX_read]; //¼ÌÐø·¢ËÍ
 130   3            if(++COM2.TX_read >= COM_TX2_Lenth)   COM2.TX_read = 0; //Ô½½ç´¦Àí
 131   3          }
 132   2          else  COM2.B_TX_busy = 0;     //½áÊø·¢ËÍ
 133   2        }
 134   1      }
 135          /****************************************************************************************
 136            * @brief: ´®¿Ú4ÖÐ¶Ï³ÌÐò£¬¸ù¾Ý½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 137                  ²¢ÇÒÖØÐÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
 138                  ·¢ËÍÖÐ¶Ï¸ù¾Ý¶ÁÐ´Ö¸ÕëÅÐ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
 139            * @param: none
 140            * @retval:  none
 141          *****************************************************************************************/
 142          void UART4_int (void) interrupt UART4_VECTOR
 143          {
 144   1        if(RI4)
 145   1        {
 146   2          CLR_RI4();
 147   2          if(COM4.B_RX_EN == 1)
 148   2          {
 149   3            if(COM4.RX_Cnt >= COM_RX2_Lenth)  COM4.RX_Cnt = 0;
 150   3            RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
 151   3            COM4.RX_TimeOut = TimeOutSet4;
 152   3          }
 153   2        }
 154   1      
 155   1        if(TI4)
 156   1        {
 157   2          CLR_TI4();
 158   2          if(COM4.TX_read != COM4.TX_write)
 159   2          {
 160   3            S4BUF = TX4_Buffer[COM4.TX_read];
 161   3            if(++COM4.TX_read >= COM_TX4_Lenth)   COM4.TX_read = 0;
 162   3          }
 163   2          else  COM4.B_TX_busy = 0;
 164   2        }
 165   1      
 166   1      }
 167          
 168          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    501    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   2322    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.56.0.0   USART                                                             06/30/2020 22:17:27 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
