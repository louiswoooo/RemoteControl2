C51 COMPILER V9.56.0.0   USART                                                             07/07/2020 17:08:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\USART.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.EXE STC_LIB\USART.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\STC_LIB;.\APP) DEBUG OBJECTEXTEND PRINT(.\Listings\USART.lst) TABS(2) OBJECT(.\Objects\USART.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      usart.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-22
   6            * @brief: ´®¿Ú2µÄÇý¶¯³ÌÐò£¬´®¿Ú2ÉèÖÃÎªwifiÄ£¿éµÄ¿ØÖÆ¶Ë¿Ú£¬´®¿Ú²ÉÓÃ¿é½ÓÊÕµÄ½ÓÊÕ»úÖÆÎª:
   7                  Ê¹ÄÜ´®¿Ú½ÓÊÕ£¬´Ó½ÓÊÕµ½µÚÒ»¸ö´®¿Ú×Ö·û¿ªÊ¼µ¹¼ÆÊ±£¬Èç¹ûÊÕµ½ÐÂ×Ö·ûÔòÖØÐÂ¿ªÊ¼µ¹¼ÆÊ±£¬
   8                  Èç¹û¼ÆÊ±³¬Ê±£¬ÔòÅÐ¶Ï½ÓÊÕµ½ÁËÊý¾Ý¿é£¬ÓÉÓÚÈ«²¿²ÉÓÃ×Ö·û´®ÃüÁîµÄÍ¨Ñ¶·½Ê½£¬
   9                  ×îºóÔÚ½ÓÊÕµ½µÄ×Ö·û´®ºóÃæ¼Ó0£¬´Ëºó½ûÖ¹½ÓÊÕ£¬µÈ´ýÈÎÎñ´¦Àí¸ÃÃüÁîÍê±Ïºó£¬ÈÎÎñ¿ÉÒÔ
  10                  ÖØÐÂÆô¶¯½ÓÊÕ
  11                  ´®¿Ú4µÄÇý¶¯³ÌÐò£¬³ö¿Ú4µÄ·¢ËÍ³ÌÐò²ÉÓÃÁË»º³åÇøÖÐ¶Ï·¢ËÍµÄ·½Ê½£¬·¢ËÍ³ÌÐòÏÈ°ÑÊý¾ÝËÍµ½»º³åÇø£¬
  12                  È»ºóÆô¶¯´¥·¢ÖÐ¶Ï°´ÕÕ·¢ËÍ¶ÁÖ¸Õë½øÐÐ·¢ËÍ£¬Èç¹û¶ÁÖ¸ÕëµÈÓÚÐ´Ö¸Õë£¬Ôò»º³åÇøÊý¾Ý·¢ËÍ½áÊø
  13          *******************************************************************************/
  14          #include "USART.h"
  15          
  16          COMx_Define COM2,COM4;
  17          u8  xdata TX2_Buffer[COM_TX2_Lenth];  //·¢ËÍ»º³å
  18          u8  xdata RX2_Buffer[COM_RX2_Lenth];  //½ÓÊÕ»º³å
  19          u8  xdata TX4_Buffer[COM_TX4_Lenth];  //·¢ËÍ»º³å
  20          u8  xdata RX4_Buffer[COM_RX4_Lenth];  //½ÓÊÕ»º³å
  21          
  22          /****************************************************************************************
  23            * @brief: ´®¿Ú2×Ö·û·¢ËÍ³ÌÐò£¬ÏÈ°Ñ×Ö·û´æÈë»º³åÇø£¬
  24                  È»ºóÅÐ¶ÏÊÇ·ñ´®¿ÚÕýÔÚ·¢ËÍ£¬Èç¹ûÃ»ÓÐ£¬Ôò´¥·¢´®¿Ú·¢ËÍ
  25            * @param: dat
  26            * @retval:  none
  27          *****************************************************************************************/
  28          void TX2_write2buff(u8 dat)
  29          {
  30   1        S2BUF = dat;
  31   1        while(!TI2);
  32   1        CLR_TI2();
  33   1      }
  34          /****************************************************************************************
  35            * @brief: ´®¿Ú2×Ö·û´®·¢ËÍ³ÌÐò£¬Óöµ½0½áÊø
  36            * @param: puts
  37            * @retval:  none
  38          *****************************************************************************************/
  39          void Usart2SendString(u8 *puts)
  40          {
  41   1          for (; *puts != 0;  puts++)  TX2_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
  42   1      }
  43          void TX4_write2buff(u8 dat) //Ð´Èë·¢ËÍ»º³å£¬Ö¸Õë+1
  44          {
  45   1        TX4_Buffer[COM4.TX_write] = dat;  //×°·¢ËÍ»º³å
  46   1        if(++COM4.TX_write >= COM_TX4_Lenth)  COM4.TX_write = 0;
  47   1      
  48   1        if(COM4.B_TX_busy == 0)   //¿ÕÏÐ
  49   1        {  
  50   2          COM4.B_TX_busy = 1;   //±êÖ¾Ã¦
  51   2          SET_TI4();        //´¥·¢·¢ËÍÖÐ¶Ï
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.56.0.0   USART                                                             07/07/2020 17:08:07 PAGE 2   

  55          
  56          void Usart4SendString(u8 *puts)
  57          {
  58   1          for (; *puts != 0;  puts++)  TX4_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
  59   1      }
  60          
  61          //´®¿Ú2³õÊ¼»¯
  62          void Usart2Init(void)   //115200bps@22.1184MHz
  63          {
  64   1        S2CON = 0x50;   //8Î»Êý¾Ý,¿É±ä²¨ÌØÂÊ
  65   1        AUXR |= 0x04;   //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T
  66   1        T2L = 0xD0;   //Éè¶¨¶¨Ê±³õÖµ
  67   1        T2H = 0xFF;   //Éè¶¨¶¨Ê±³õÖµ
  68   1        AUXR |= 0x10;   //Æô¶¯¶¨Ê±Æ÷2
  69   1        
  70   1        COM2.id = 2;
  71   1        COM2.TX_read    = 0;
  72   1        COM2.TX_write   = 0;
  73   1        COM2.B_TX_busy  = 0;
  74   1        COM2.RX_Cnt     = 0;
  75   1        COM2.RX_TimeOut = 0;
  76   1        COM2.B_RX_EN    = 0;
  77   1        COM2.B_RX_OK    = 0;
  78   1      }
  79          //´®¿Ú4³õÊ¼»¯
  80          void Usart4Init(void)   //115200bps@22.1184MHz
  81          {
  82   1        S4CON = 0x10;   //8???,?????
  83   1        S4CON |= 0x40;    //??4?????4???????
  84   1        T4T3M |= 0x20;    //???4???Fosc,?1T
  85   1        T4L = 0xD0;   //??????
  86   1        T4H = 0xFF;   //??????
  87   1        T4T3M |= 0x80;    //?????4
  88   1      
  89   1        COM4.id = 4;
  90   1        COM4.TX_read    = 0;
  91   1        COM4.TX_write   = 0;
  92   1        COM4.B_TX_busy  = 0;
  93   1        COM4.RX_Cnt     = 0;
  94   1        COM4.RX_TimeOut = 0;
  95   1        COM4.B_RX_EN    = 0;
  96   1        COM4.B_RX_OK    = 0;
  97   1      
  98   1      }
  99          
 100          /****************************************************************************************
 101            * @brief: ´®¿Ú2ÖÐ¶Ï³ÌÐò£¬¸ù¾Ý½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 102                  ²¢ÇÒÖØÐÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
 103                  ·¢ËÍÖÐ¶Ï¸ù¾Ý¶ÁÐ´Ö¸ÕëÅÐ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
 104            * @param: none
 105            * @retval:  none
 106          *****************************************************************************************/
 107          void UART2_int (void) interrupt UART2_VECTOR    using 2
 108          {
 109   1        if(RI2)
 110   1        {
 111   2          CLR_RI2();
 112   2          if(COM2.B_RX_EN == 1)   //Èç¹ûÔÊÐí½ÓÊÕ
 113   2          {
 114   3            if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;  //»º³åÇøÒç³öå£¿
 115   3            RX2_Buffer[COM2.RX_Cnt++] = S2BUF;          //ÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 116   3            COM2.RX_TimeOut = TimeOutSet2;            //ÖØÐÂÉèÖÃ³¬Ê±¼ÆÊ±Æ÷
C51 COMPILER V9.56.0.0   USART                                                             07/07/2020 17:08:07 PAGE 3   

 117   3          }
 118   2        }
 119   1      }
 120          /****************************************************************************************
 121            * @brief: ´®¿Ú4ÖÐ¶Ï³ÌÐò£¬¸ù¾Ý½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 122                  ²¢ÇÒÖØÐÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
 123                  ·¢ËÍÖÐ¶Ï¸ù¾Ý¶ÁÐ´Ö¸ÕëÅÐ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
 124            * @param: none
 125            * @retval:  none
 126          *****************************************************************************************/
 127          void UART4_int (void) interrupt UART4_VECTOR  using 3
 128          {
 129   1        if(RI4)
 130   1        {
 131   2          CLR_RI4();
 132   2          if(COM4.B_RX_EN == 1)
 133   2          {
 134   3            if(COM4.RX_Cnt >= COM_RX2_Lenth)  COM4.RX_Cnt = 0;
 135   3            RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
 136   3            COM4.RX_TimeOut = TimeOutSet4;
 137   3          }
 138   2        }
 139   1      
 140   1        if(TI4)
 141   1        {
 142   2          CLR_TI4();
 143   2          if(COM4.TX_read != COM4.TX_write)
 144   2          {
 145   3            S4BUF = TX4_Buffer[COM4.TX_read];
 146   3            if(++COM4.TX_read >= COM_TX4_Lenth)   COM4.TX_read = 0;
 147   3          }
 148   2          else  COM4.B_TX_busy = 0;
 149   2        }
 150   1      
 151   1      }
 152          
 153          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    403    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   3346    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
