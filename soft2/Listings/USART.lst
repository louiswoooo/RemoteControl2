C51 COMPILER V9.56.0.0   USART                                                             07/23/2020 00:05:05 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\USART.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE STC_LIB\USART.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\STC_LIB;.\APP) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\USART.lst) TABS(2) OBJECT(.\Objects\USART.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      usart.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-22
   6            * @brief: ´®¿Ú2µÄÇı¶¯³ÌĞò£¬´®¿Ú2ÉèÖÃÎªwifiÄ£¿éµÄ¿ØÖÆ¶Ë¿Ú£¬´®¿Ú²ÉÓÃ¿é½ÓÊÕµÄ½ÓÊÕ»úÖÆÎª:
   7                  Ê¹ÄÜ´®¿Ú½ÓÊÕ£¬´Ó½ÓÊÕµ½µÚÒ»¸ö´®¿Ú×Ö·û¿ªÊ¼µ¹¼ÆÊ±£¬Èç¹ûÊÕµ½ĞÂ×Ö·ûÔòÖØĞÂ¿ªÊ¼µ¹¼ÆÊ±£¬
   8                  Èç¹û¼ÆÊ±³¬Ê±£¬ÔòÅĞ¶Ï½ÓÊÕµ½ÁËÊı¾İ¿é£¬ÓÉÓÚÈ«²¿²ÉÓÃ×Ö·û´®ÃüÁîµÄÍ¨Ñ¶·½Ê½£¬
   9                  ×îºóÔÚ½ÓÊÕµ½µÄ×Ö·û´®ºóÃæ¼Ó0£¬´Ëºó½ûÖ¹½ÓÊÕ£¬µÈ´ıÈÎÎñ´¦Àí¸ÃÃüÁîÍê±Ïºó£¬ÈÎÎñ¿ÉÒÔ
  10                  ÖØĞÂÆô¶¯½ÓÊÕ
  11                  ´®¿Ú4µÄÇı¶¯³ÌĞò£¬³ö¿Ú4µÄ·¢ËÍ³ÌĞò²ÉÓÃÁË»º³åÇøÖĞ¶Ï·¢ËÍµÄ·½Ê½£¬·¢ËÍ³ÌĞòÏÈ°ÑÊı¾İËÍµ½»º³åÇø£¬
  12                  È»ºóÆô¶¯´¥·¢ÖĞ¶Ï°´ÕÕ·¢ËÍ¶ÁÖ¸Õë½øĞĞ·¢ËÍ£¬Èç¹û¶ÁÖ¸ÕëµÈÓÚĞ´Ö¸Õë£¬Ôò»º³åÇøÊı¾İ·¢ËÍ½áÊø
  13          *******************************************************************************/
  14          #include "USART.h"
  15          #include "debug.h"
  16          
  17          COMx_Define COM2;
  18          u8  xdata TX2_Buffer[COM_TX2_Lenth];  //·¢ËÍ»º³å
  19          u8  xdata RX2_Buffer[COM_RX2_Lenth];  //½ÓÊÕ»º³å
  20          
  21          #if DEBUG_PORT==USART4
              COMx_Define COM4;
              u8  xdata TX4_Buffer[COM_TX4_Lenth];  //·¢ËÍ»º³å
              u8  xdata RX4_Buffer[COM_RX4_Lenth];  //½ÓÊÕ»º³å
              #else
  26          COMx_Define COM1;
  27          u8  xdata TX1_Buffer[COM_TX1_Lenth];  //·¢ËÍ»º³å
  28          u8  xdata RX1_Buffer[COM_RX1_Lenth];  //½ÓÊÕ»º³å
  29          #endif
  30          
  31          
  32          //´®¿Ú2³õÊ¼»¯
  33          void Usart2Init(void)   //115200bps@22.1184MHz
  34          {
  35   1        S2CON = 0x50;   //8Î»Êı¾İ,¿É±ä²¨ÌØÂÊ
  36   1        AUXR |= 0x04;   //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T
  37   1        T2L = 0xD0;   //Éè¶¨¶¨Ê±³õÖµ
  38   1        T2H = 0xFF;   //Éè¶¨¶¨Ê±³õÖµ
  39   1        AUXR |= 0x10;   //Æô¶¯¶¨Ê±Æ÷2
  40   1        
  41   1        COM2.id = 2;
  42   1        COM2.TX_read    = 0;
  43   1        COM2.TX_write   = 0;
  44   1        COM2.B_TX_busy  = 0;
  45   1        COM2.RX_Cnt     = 0;
  46   1        COM2.RX_TimeOut = 0;
  47   1        COM2.B_RX_EN    = 0;
  48   1        COM2.B_RX_OK    = 0;
  49   1      }
  50          
  51          
  52          /****************************************************************************************
  53            * @brief: ´®¿Ú2×Ö·û·¢ËÍ³ÌĞò£¬ÏÈ°Ñ×Ö·û´æÈë»º³åÇø£¬
  54                  È»ºóÅĞ¶ÏÊÇ·ñ´®¿ÚÕıÔÚ·¢ËÍ£¬Èç¹ûÃ»ÓĞ£¬Ôò´¥·¢´®¿Ú·¢ËÍ
C51 COMPILER V9.56.0.0   USART                                                             07/23/2020 00:05:05 PAGE 2   

  55            * @param: dat
  56            * @retval:  none
  57          *****************************************************************************************/
  58          void TX2_write2buff(u8 dat)
  59          {
  60   1        S2BUF = dat;
  61   1        while(!TI2);
  62   1        CLR_TI2();
  63   1      }
  64          /****************************************************************************************
  65            * @brief: ´®¿Ú2×Ö·û´®·¢ËÍ³ÌĞò£¬Óöµ½0½áÊø
  66            * @param: puts
  67            * @retval:  none
  68          *****************************************************************************************/
  69          void Usart2SendString(u8 *puts)
  70          {
  71   1          for (; *puts != 0;  puts++)  TX2_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
  72   1      }
  73          
  74          /****************************************************************************************
  75            * @brief: ´®¿Ú2ÖĞ¶Ï³ÌĞò£¬¸ù¾İ½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
  76                  ²¢ÇÒÖØĞÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
  77                  ·¢ËÍÖĞ¶Ï¸ù¾İ¶ÁĞ´Ö¸ÕëÅĞ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
  78            * @param: none
  79            * @retval:  none
  80          *****************************************************************************************/
  81          void UART2_int (void) interrupt UART2_VECTOR    using 2
  82          {
  83   1        if(RI2)
  84   1        {
  85   2          CLR_RI2();
  86   2          if(COM2.B_RX_EN == 1)   //Èç¹ûÔÊĞí½ÓÊÕ
  87   2          {
  88   3            if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;  //»º³åÇøÒç³öå£¿
  89   3            RX2_Buffer[COM2.RX_Cnt++] = S2BUF;          //ÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
  90   3            COM2.RX_TimeOut = TimeOutSet2;            //ÖØĞÂÉèÖÃ³¬Ê±¼ÆÊ±Æ÷
  91   3          }
  92   2        }
  93   1      }
  94          
  95          #if DEBUG_PORT == USART4
              
              //´®¿Ú4³õÊ¼»¯
              void Usart4Init(void)   //115200bps@22.1184MHz
              {
                S4CON = 0x10;   //8???,?????
                S4CON |= 0x40;    //??4?????4???????
                T4T3M |= 0x20;    //???4???Fosc,?1T
                T4L = 0xD0;   //??????
                T4H = 0xFF;   //??????
                T4T3M |= 0x80;    //?????4
              
                COM4.id = 4;
                COM4.TX_read    = 0;
                COM4.TX_write   = 0;
                COM4.B_TX_busy  = 0;
                COM4.RX_Cnt     = 0;
                COM4.RX_TimeOut = 0;
                COM4.B_RX_EN    = 0;
                COM4.B_RX_OK    = 0;
              
                S4_Int_en();
C51 COMPILER V9.56.0.0   USART                                                             07/23/2020 00:05:05 PAGE 3   

              
              
              }
              
              void TX4_write2buff(u8 dat) //Ğ´Èë·¢ËÍ»º³å£¬Ö¸Õë+1
              {
                TX4_Buffer[COM4.TX_write] = dat;  //×°·¢ËÍ»º³å
                if(++COM4.TX_write >= COM_TX4_Lenth)  COM4.TX_write = 0;
              
                if(COM4.B_TX_busy == 0)   //¿ÕÏĞ
                {  
                  COM4.B_TX_busy = 1;   //±êÖ¾Ã¦
                  SET_TI4();        //´¥·¢·¢ËÍÖĞ¶Ï
                }
              }
              
              void Usart4SendString(u8 *puts)
              {
                  for (; *puts != 0;  puts++)  TX4_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
              }
              
              
              
              /****************************************************************************************
                * @brief: ´®¿Ú4ÖĞ¶Ï³ÌĞò£¬¸ù¾İ½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
                      ²¢ÇÒÖØĞÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
                      ·¢ËÍÖĞ¶Ï¸ù¾İ¶ÁĞ´Ö¸ÕëÅĞ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
                * @param: none
                * @retval:  none
              *****************************************************************************************/
              void UART4_int (void) interrupt UART4_VECTOR  using 3
              {
                if(RI4)
                {
                  CLR_RI4();
                  if(COM4.B_RX_EN == 1)
                  {
                    if(COM4.RX_Cnt >= COM_RX4_Lenth)  COM4.RX_Cnt = 0;
                    RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
                    COM4.RX_TimeOut = TimeOutSet4;
                  }
                }
              
                if(TI4)
                {
                  CLR_TI4();
                  if(COM4.TX_read != COM4.TX_write)
                  {
                    S4BUF = TX4_Buffer[COM4.TX_read];
                    if(++COM4.TX_read >= COM_TX4_Lenth)   COM4.TX_read = 0;
                  }
                  else  COM4.B_TX_busy = 0;
                }
              
              }
              
              #endif
 174          
 175          #if DEBUG_PORT == USART1
 176          
 177          //´®¿Ú1³õÊ¼»¯
 178          void Usart1Init(void)   //115200bps@22.1184MHz
C51 COMPILER V9.56.0.0   USART                                                             07/23/2020 00:05:05 PAGE 4   

 179          {
 180   1        SCON = 0x50;    //8???,?????
 181   1        AUXR |= 0x40;   //???1???Fosc,?1T
 182   1        AUXR &= 0xFE;   //??1?????1???????
 183   1        TMOD &= 0x0F;   //?????1?16???????
 184   1        TL1 = 0xD0;   //??????
 185   1        TH1 = 0xFF;   //??????
 186   1        ET1 = 0;    //?????1??
 187   1        TR1 = 1;    //?????1
 188   1        
 189   1        COM1.id = 1;
 190   1        COM1.TX_read    = 0;
 191   1        COM1.TX_write   = 0;
 192   1        COM1.B_TX_busy  = 0;
 193   1        COM1.RX_Cnt     = 0;
 194   1        COM1.RX_TimeOut = 0;
 195   1        COM1.B_RX_EN    = 0;
 196   1        COM1.B_RX_OK    = 0;
 197   1      
 198   1        ES =1;
 199   1      
 200   1      }
 201          
 202          void TX1_write2buff(u8 dat) //Ğ´Èë·¢ËÍ»º³å£¬Ö¸Õë+1
 203          {
 204   1        TX1_Buffer[COM1.TX_write] = dat;  //×°·¢ËÍ»º³å
 205   1        if(++COM1.TX_write >= COM_TX1_Lenth)  COM1.TX_write = 0;
 206   1      
 207   1        if(COM1.B_TX_busy == 0)   //¿ÕÏĞ
 208   1        {  
 209   2          COM1.B_TX_busy = 1;   //±êÖ¾Ã¦
 210   2          TI=1;       //´¥·¢·¢ËÍÖĞ¶Ï
 211   2        }
 212   1      }
 213          
 214          void Usart1SendString(u8 *puts)
 215          {
 216   1          for (; *puts != 0;  puts++)  TX1_write2buff(*puts);   //Óöµ½Í£Ö¹·û0½áÊø
 217   1      }
 218          
 219          
 220          
 221          /****************************************************************************************
 222            * @brief: ´®¿Ú4ÖĞ¶Ï³ÌĞò£¬¸ù¾İ½ÓÊÕ×´Ì¬£¬½ÓÊÕµ½µÄ×Ö·û·ÅÈë»º³åÇø
 223                  ²¢ÇÒÖØĞÂÉèÖÃ½ÓÊÕ¼ÆÊ±Æ÷
 224                  ·¢ËÍÖĞ¶Ï¸ù¾İ¶ÁĞ´Ö¸ÕëÅĞ¶ÏÊÇ·ñ·¢ËÍÍê³É£¬Èç¹ûÍê³ÉÇåÃ¦±êÖ¾
 225            * @param: none
 226            * @retval:  none
 227          *****************************************************************************************/
 228          void UART1_int (void) interrupt UART1_VECTOR  using 3
 229          {
 230   1        if(RI)
 231   1        {
 232   2          RI=0;
 233   2          if(COM1.B_RX_EN == 1)
 234   2          {
 235   3            if(COM1.RX_Cnt >= COM_RX1_Lenth)  COM1.RX_Cnt = 0;
 236   3            RX1_Buffer[COM1.RX_Cnt++] = SBUF;
 237   3            COM1.RX_TimeOut = TimeOutSet1;
 238   3          }
 239   2        }
 240   1      
C51 COMPILER V9.56.0.0   USART                                                             07/23/2020 00:05:05 PAGE 5   

 241   1        if(TI)
 242   1        {
 243   2          TI=0;
 244   2          if(COM1.TX_read != COM1.TX_write)
 245   2          {
 246   3            SBUF = TX1_Buffer[COM1.TX_read];
 247   3            if(++COM1.TX_read >= COM_TX1_Lenth)   COM1.TX_read = 0;
 248   3          }
 249   2          else  COM1.B_TX_busy = 0;
 250   2        }
 251   1      
 252   1      }
 253          
 254          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   3350    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
